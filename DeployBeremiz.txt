/////
Отладка (host)

$python Beremiz_service.py

Project/Config:

PYRO://127.0.0.1:3000 или LOCAL://
Compiler: gcc
CFLAGS:
Linker: gcc
LDFlAGS:

/////
Диплой(target)

$python Beremiz_service.py -p 62114 -x 0

Project/Config:

PYRO://192.168.137.18:62114
Compiler: arm-linux-gnueabihf-gcc
CFLAGS: -O2
Linker: arm-linux-gnueabihf-gcc
LDFlAGS:

/////
Подключение wiringPi

Project-Add-C_Extension

Выбрать 0.x: c_ext_0

0.x: c_ext_0
/////////////////////////////// includes section ///////////////////////////////
#include <stdlib.h>
#include <wiringPi.h>
/////////////////////////////// globals section ////////////////////////////////
void InitPin(int pin, int val)
{
    pinMode(pin, val);
}
void CheckPin()
{
    if (wiringPiSetup() == -1) exit(1);
}
int ReadPin(int pin)
{
    return digitalRead(pin);
}
void WritePin(int pin, int val)
{
    digitalWrite(pin, val);
}
///////////////////////////// initFunction section /////////////////////////////
/////////////////////////// cleanUpFunction section ////////////////////////////
/////////////////////////// retrieveFunction section ///////////////////////////
/////////////////////////// publishFunction section ////////////////////////////


Создаем FunctionalBlock на языке ST с именем C_Pragma
Добавляем 2 локальные переменные IN и OUT

{{
    extern int ReadPin(int);
    extern void WritePin(int, int);
    extern void InitPin(int, int);
    extern void CheckPin();

    CheckPin();
    InitPin(GetFbVar(IN), 0);
    InitPin(GetFbVar(OUT), 1);

    SetFbVar(OUT, GetFbVar(IN));
    WritePin(GetFbVar(OUT), ReadPin(GetFbVar(IN)));
}}

Для компиляции на хосте с #include <wiringPi.h>:
Собрать libwiringPi.so, libwiringPiDev.so на хосте и скопировать в /usr/arm-linux-gnueabihf-gcc/lib
Скопировать wiringPi.h в /usr/arm-linux-gnueabihf-gcc/include
Компилить с флагом -lwiringPi

!Компиляция проекта выполняется, при диплое вылезает ошибка Undefined symbol digitalRead :
На таргете отсутствует arm-linux-gnueabihf-gcc - установка невозможна
В /usr/lib и /usr/include нужные библиотеки и хедеры есть - на #include <wiringPi.h> не ругается
--Проверить источники инклудов
--Добавить исходные функции в "initFunction section" раздел 0.x: c_ext_0
--Собрать без флага оптимизации -O2 : не помогло
--Подсунуть wiringPi.h в plc_main.c : ограничения на #include везде, кроме C_ext
--Собрать на таргете : не устанавливается необходимый компилятор
--cd ; sudo nano .bashrc ; LD_LIBRARY_PATH=/usr/lib : не помогло
--sudo nano /etc/ls.so.conf ; cd ld.so.conf.d ; sudo nano libc.conf : не помогло
+-cd /usr/local/lib/ ; sudo cp /usr/lib/libwiringPi.so .; sudo cp /usr/lib/libwiringPiDev.so . : помогло для gcc
Кросс компиляция на gcc -arch=arm64
