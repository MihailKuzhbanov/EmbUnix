#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ARRAY_TYPE(__ARRAY_OF_INT_32,INT,[32])
__DECLARE_ARRAY_TYPE(__ARRAY_OF_BOOL_32,BOOL,[32])
// FUNCTION_BLOCK C_PRAGMA
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(INT,NUMOUT)
  __DECLARE_VAR(__ARRAY_OF_INT_32,SIGNALDATA)
  __DECLARE_VAR(INT,DATA0)
  __DECLARE_VAR(INT,DATA1)
  __DECLARE_VAR(INT,DATA2)
  __DECLARE_VAR(INT,DATA3)
  __DECLARE_VAR(__ARRAY_OF_BOOL_32,SIGNALINFO)
  __DECLARE_VAR(BOOL,INFO0)
  __DECLARE_VAR(BOOL,INFO1)
  __DECLARE_VAR(BOOL,INFO2)
  __DECLARE_VAR(BOOL,INFO3)
  __DECLARE_VAR(INT,VALIN)
  __DECLARE_VAR(INT,NUMIN)
  __DECLARE_VAR(INT,PERMIT)

  // FB private variables - TEMP, private and located variables

} C_PRAGMA;

void C_PRAGMA_init__(C_PRAGMA *data__, BOOL retain);
// Code part
void C_PRAGMA_body__(C_PRAGMA *data__);
// PROGRAM PLC_PRG
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(INT,INPUTPINNUMBER)
  __DECLARE_VAR(__ARRAY_OF_INT_32,DATA)
  __DECLARE_VAR(INT,OUTPUTPINNUMBER)
  __DECLARE_VAR(INT,RESULT)

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(__ARRAY_OF_BOOL_32,INFO)
  __DECLARE_VAR(INT,STATE)
  C_PRAGMA C_PRAGMA0;
  __DECLARE_VAR(BOOL,INT_TO_BOOL21_OUT)
  __DECLARE_VAR(BOOL,INT_TO_BOOL22_OUT)
  __DECLARE_VAR(BOOL,INT_TO_BOOL23_OUT)
  __DECLARE_VAR(BOOL,INT_TO_BOOL24_OUT)

} PLC_PRG;

void PLC_PRG_init__(PLC_PRG *data__, BOOL retain);
// Code part
void PLC_PRG_body__(PLC_PRG *data__);
#endif //__POUS_H
